services:
  agent:
    build:
      context: .
      dockerfile: ./apps/agent/Dockerfile
      target: development
    command: pnpm run start:debug agent
    ports:
      - '9231:9229'
    volumes:
      - ./:/usr/src/app
    env_file:
      - ./apps/agent/.env
    depends_on:
      - rabbitmq

  process:
    build:
      context: .
      dockerfile: ./apps/process/Dockerfile
      target: development
    command: pnpm run start:debug process
    ports:
      - '3000:3000'
      - '9229:9229'
    volumes:
      - ./:/usr/src/app
    env_file:
      - ./apps/process/.env
    depends_on:
      - mongo
      - rabbitmq

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:debug auth
    ports:
      - '3001:3001'
      - '9230:9229'
    volumes:
      - ./:/usr/src/app
    env_file:
      - ./apps/auth/.env
    depends_on:
      - mongo
      - rabbitmq

  rabbitmq:
    image: rabbitmq:3.13.1-management
    hostname: rmq
    restart: unless-stopped
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  mongo:
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGODB_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGODB_PASS}
    ports:
      - 27017:27017
    healthcheck:
      test: ['CMD', 'mongo', '--eval', "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5
