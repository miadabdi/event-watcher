name: Generate Auth Docker Image Stable

on:
  workflow_run:
    workflows: ['Run Tests for Auth Service']
    branches: [main]
    types:
      - completed
  workflow_dispatch:

env:
  IMG_NAME: 'event-watcher'
  TAG: 'stable'
  USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo 'The Run Tests workflow passed'

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: on-success
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract project version
        uses: saionaro/extract-package-version@v1.3.0
        id: package_ver

      - name: Set Date and Package Version
        # from now you can access the version
        run: |
          echo ${{ steps.package_ver.outputs.version }}
          echo "NOW=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: DockerHUB login
        uses: docker/login-action@v2
        with:
          username: ${{ env.USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          dockerfile: apps/auth/Dockerfile
          target: production
          push: true
          tags: |
            ${{ env.USERNAME }}/${{ env.IMG_NAME }}:${{ env.TAG }}-${{ steps.package_ver.outputs.version }}
            ${{ env.USERNAME }}/${{ env.IMG_NAME }}:${{ env.TAG }}-latest

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository }}

      # - name: Test App
      #   run: |
      #     docker run -d -p 8080:3000 --name streamy ${{ env.IMG_NAME }}
      #     sleep 30s
      #     curl --request GET --url http://localhost:8080

      # - name: Clean Up
      #   run: |
      #     docker container stop 'personal-portfolio'
